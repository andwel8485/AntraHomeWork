{\rtf1\ansi\ansicpg1252\cocoartf2708
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;\f2\fswiss\fcharset0 ArialMT;
\f3\fswiss\fcharset0 Arial-BoldMT;\f4\fmodern\fcharset0 Courier;\f5\fnil\fcharset0 Verdana;
}
{\colortbl;\red255\green255\blue255;\red24\green25\blue27;\red255\green255\blue255;\red0\green0\blue0;
\red255\green255\blue255;\red5\green10\blue30;\red5\green10\blue30;\red38\green38\blue38;\red19\green18\blue18;
}
{\*\expandedcolortbl;;\cssrgb\c12549\c12941\c14118;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0;
\csgray\c100000;\cssrgb\c1569\c4706\c15686;\cssrgb\c1569\c4706\c15686;\cssrgb\c20000\c20000\c20000;\cssrgb\c9412\c9020\c9020;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww16200\viewh11400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 1
\fs36 . What type would you choose for the following \'93numbers\'94?\

\f1\b0 A person\'92s telephone number
\f0\b  string
\f1\b0 \
A person\'92s height 
\f0\b float
\f1\b0 \
A person\'92s age
\f0\b  short
\f1\b0 \
A person\'92s gender (Male, Female, Prefer Not To Answer) 
\f0\b string
\f1\b0 \
A person\'92s salary
\f0\b  decimal
\f1\b0 \
A book\'92s ISBN
\f0\b  string
\f1\b0 \
A book\'92s price 
\f0\b decimal
\f1\b0 \
A book\'92s shipping weight 
\f0\b float
\f1\b0 \
A country\'92s population 
\f0\b int or long
\f1\b0 \
The number of stars in the universe 
\f0\b long
\f1\b0 \
The number of employees in each of the small or medium businesses in the\
United Kingdom (up to about 50,000 employees per business) 
\f0\b int\

\f1\b0 \

\f0\b 2. What are the difference between value type and reference type variables?\
\

\f1\b0 Value type directly contain their data and Reference type store the reference(address) of the data\
\

\f0\b \
3. What happens when you divide an int variable by 0?\
\pard\pardeftab720\partightenfactor0

\f1\b0 \cf0 It will throw DivideByZeroException\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b \cf0 4. What happens when you divide a double variable by 0?\
\pard\pardeftab720\partightenfactor0

\f2\b0 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Dividing a floating-point value by zero doesn't throw an exception; it results in\'a0
\f3\b positive infinity, negative infinity, or not a number (NaN)
\f2\b0 , according to the rules of IEEE 754 arithmetic.\
\pard\pardeftab720\partightenfactor0

\f0\b \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 5. What happens when you overflow an int variable, that is, set it to a value beyond its\
range?\

\f1\b0 When you overflow the int variable, it will loop back to the negative side\
\

\f0\b 6. What is the difference between x = y++; and x = ++y;?
\f2\b0 \cf4 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb5 \outl0\strokewidth0 y++ is using 
\f3\b postfix increment operator, 
\f2\b0 \cf4 \cb5 \outl0\strokewidth0 \strokec6 ++y is using 
\f3\b prefix increment operator
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\pardeftab720\partightenfactor0

\f2\b0 \cf4 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 In y++ the value of variable is 
\f3\b printed first then it is incremented
\f2\b0  whereas in ++y the value is 
\f3\b incremented first and then it is displayed\strokec2 .
\f2\b0 \cf4 \cb5 \outl0\strokewidth0 \
\pard\pardeftab720\partightenfactor0

\f0\b \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 7. What is the difference between break, continue, and return when used inside a loop\
statement?
\f2\b0 \cf4 \cb5 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\partightenfactor0
\cf4 \
When using break inside the loop, it will immediately jump outside the loop and execute the code after the loop\
\pard\pardeftab720\partightenfactor0
\cf4 When using continue inside the loop, it will skip the rest of the code after continue inside loop and jump to the next iteration\
When using return inside the loop, it will immediately return the function, no matter if there is code after the loop or not.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b \cf0 \cb1 \kerning1\expnd0\expndtw0 \
8. What are the three parts of a for statement and which of them are required?\

\f1\b0 The three parts of a for statement are 
\f0\b initializer
\f1\b0 , 
\f0\b condition
\f1\b0 , 
\f0\b iterator
\f1\b0  \
The 
\f0\b initializer
\f1\b0  initialize the variable we want to start in a loop\
The 
\f0\b condition
\f1\b0  check the loop condition for each loop cycle
\f4 \cf8 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 \

\f1 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 The 
\f0\b iterator
\f1\b0  change the loop variable after each loop\
\
All three parts are optional, 
\f5 \cf9 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec9 you can 
\f1 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 initialize the variable before loop, and condition and iterator can be defined inside the code block.}